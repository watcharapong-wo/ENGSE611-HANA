import React, { useState } from 'react';

// ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏° (‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏ï‡∏≤‡∏°‡πÇ‡∏à‡∏ó‡∏¢‡πå)
import BasicCounter from './components/BasicCounter';
import NameChanger from './components/NameChanger';
import ColorPicker from './components/ColorPicker';
import TodoList from './components/TodoList';
import SimpleCalculator from './components/SimpleCalculator';
import CounterGame from './components/CounterGame';

// ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á ‚Äú‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà‚Äù
import VotingSystem from './components/VotingSystem';
import NumberGuess from './components/NumberGuess';
import Stopwatch from './components/Stopwatch';
import SimpleChat from './components/SimpleChat';

export default function App() {
  const [activeExample, setActiveExample] = useState('counter');

  const examples = [
    { id: 'counter',    title: '1. ‡∏ï‡∏±‡∏ß‡∏ô‡∏±‡∏ö‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô (+5,+10)', desc: 'useState + ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡πà‡∏≤', component: <BasicCounter /> },
    { id: 'name',       title: '2. ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠ (‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏≥)', desc: '‡∏ô‡∏±‡∏ö‡∏Ñ‡∏≥‡∏à‡∏≤‡∏Å input', component: <NameChanger /> },
    { id: 'color',      title: '3. ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á (‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏û‡∏≤‡πÄ‡∏•‡∏ï)', desc: '‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏µ + ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏µ‡πÇ‡∏õ‡∏£‡∏î', component: <ColorPicker /> },
    { id: 'todo',       title: '4. ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏á‡∏≤‡∏ô (‡∏°‡∏µ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà)', desc: 'Array state + category + filter', component: <TodoList /> },
    { id: 'calculator', title: '5. ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Ñ‡∏¥‡∏î‡πÄ‡∏•‡∏Ç (% ‡πÅ‡∏•‡∏∞ ‚àö)', desc: '‡∏´‡∏•‡∏≤‡∏¢ state + ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏û‡∏¥‡πà‡∏°', component: <SimpleCalculator /> },
    { id: 'game',       title: '6. ‡πÄ‡∏Å‡∏°‡∏ô‡∏±‡∏ö‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô (Power-ups)', desc: '‡∏ï‡∏£‡∏£‡∏Å‡∏∞‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô', component: <CounterGame /> },
    { id: 'voting',     title: '7. ‡∏£‡∏∞‡∏ö‡∏ö‡πÇ‡∏´‡∏ß‡∏ï (‡πÉ‡∏´‡∏°‡πà)', desc: '‡πÄ‡∏û‡∏¥‡πà‡∏°/‡∏•‡∏ö‡∏ú‡∏π‡πâ‡∏™‡∏°‡∏±‡∏Ñ‡∏£ + ‡πÇ‡∏´‡∏ß‡∏ï', component: <VotingSystem /> },
    { id: 'guess',      title: '8. ‡πÄ‡∏Å‡∏°‡∏ó‡∏≤‡∏¢‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç (‡πÉ‡∏´‡∏°‡πà)', desc: '‡∏™‡∏∏‡πà‡∏°‡πÄ‡∏•‡∏Ç 1-100 + ‡πÄ‡∏â‡∏•‡∏¢', component: <NumberGuess /> },
    { id: 'stopwatch',  title: '9. ‡∏ô‡∏≤‡∏¨‡∏¥‡∏Å‡∏≤‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤ (‡πÉ‡∏´‡∏°‡πà)', desc: 'Start/Stop/Reset + Lap', component: <Stopwatch /> },
    { id: 'chat',       title: '10. ‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏ä‡∏ó (‡πÉ‡∏´‡∏°‡πà)', desc: '‡πÅ‡∏ä‡∏ó‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏ù‡∏±‡πà‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß', component: <SimpleChat /> },
  ];

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100">
      <header className="bg-white shadow-lg mb-8">
        <div className="container mx-auto px-4 py-6">
          <h1 className="text-3xl font-bold text-center text-gray-800">
            üéì React State Management ‚Äî Activities
          </h1>
          <p className="text-center text-gray-600 mt-2">
            ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á + ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà
          </p>
        </div>
      </header>

      <div className="container mx-auto px-4">
        <div className="grid grid-cols-1 lg:grid-cols-4 gap-6">
          <aside className="lg:col-span-1">
            <div className="bg-white rounded-lg shadow-lg p-4 sticky top-4">
              <h3 className="font-bold text-lg mb-4">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:</h3>
              {examples.map(ex => (
                <button
                  key={ex.id}
                  onClick={() => setActiveExample(ex.id)}
                  className={`w-full text-left p-3 mb-2 rounded-lg transition ${
                    activeExample === ex.id
                      ? 'bg-blue-600 text-white shadow'
                      : 'bg-gray-100 hover:bg-gray-200'
                  }`}
                >
                  <div className="font-medium">{ex.title}</div>
                  <div className="text-sm opacity-75">{ex.desc}</div>
                </button>
              ))}
            </div>
          </aside>

          <main className="lg:col-span-3">
            <div className="bg-white rounded-lg shadow-lg p-6">
              {examples.find(ex => ex.id === activeExample)?.component}
            </div>
          </main>
        </div>
      </div>
    </div>
  );
}
