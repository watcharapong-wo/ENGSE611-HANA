// SocialShare.jsx - Component ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ä‡∏£‡πå‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡πÉ‡∏ô Social Media
import React, { useState } from 'react';
import { useNotification } from '../contexts/NotificationContext';
import './SocialShare.css';

const SocialShare = ({ restaurant, review }) => {
  const { showSuccess, showInfo } = useNotification();
  const [isOpen, setIsOpen] = useState(false);

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á URL ‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏ä‡∏£‡πå
  const generateShareContent = () => {
    const baseUrl = window.location.origin;
    const restaurantUrl = `${baseUrl}?restaurant=${restaurant.id}`;
    
    const shareText = review 
      ? `üçΩÔ∏è ‡πÄ‡∏û‡∏¥‡πà‡∏á‡πÑ‡∏õ‡∏Å‡∏¥‡∏ô "${restaurant.name}" ‡∏°‡∏≤ ‡πÉ‡∏´‡πâ ${review.rating} ‡∏î‡∏≤‡∏ß! ${review.comment.slice(0, 100)}${review.comment.length > 100 ? '...' : ''}`
      : `üçΩÔ∏è ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏£‡πâ‡∏≤‡∏ô "${restaurant.name}" - ${restaurant.description}`;
    
    const hashtags = ['RestaurantReview', '‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏≠‡∏£‡πà‡∏≠‡∏¢', restaurant.cuisine.replace('‡∏≠‡∏≤‡∏´‡∏≤‡∏£', '').replace(' ', '')];
    
    return {
      url: restaurantUrl,
      text: shareText,
      hashtags: hashtags.join(',')
    };
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏ä‡∏£‡πå‡πÑ‡∏õ‡∏¢‡∏±‡∏á Facebook
  const shareToFacebook = () => {
    const { url, text } = generateShareContent();
    const facebookUrl = `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(url)}&quote=${encodeURIComponent(text)}`;
    
    window.open(facebookUrl, '_blank', 'width=600,height=400');
    showSuccess('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏ä‡∏£‡πå Facebook! üìò');
    setIsOpen(false);
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏ä‡∏£‡πå‡πÑ‡∏õ‡∏¢‡∏±‡∏á Twitter
  const shareToTwitter = () => {
    const { url, text, hashtags } = generateShareContent();
    const twitterText = `${text}\n\n${url}\n\n#${hashtags.replace(/,/g, ' #')}`;
    const twitterUrl = `https://twitter.com/intent/tweet?text=${encodeURIComponent(twitterText)}`;
    
    window.open(twitterUrl, '_blank', 'width=600,height=400');
    showSuccess('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏ä‡∏£‡πå Twitter! üê¶');
    setIsOpen(false);
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏ä‡∏£‡πå‡πÑ‡∏õ‡∏¢‡∏±‡∏á LINE
  const shareToLine = () => {
    const { url, text } = generateShareContent();
    const lineText = `${text}\n\n${url}`;
    const lineUrl = `https://social-plugins.line.me/lineit/share?url=${encodeURIComponent(url)}&text=${encodeURIComponent(text)}`;
    
    window.open(lineUrl, '_blank', 'width=600,height=400');
    showSuccess('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏ä‡∏£‡πå LINE! üíö');
    setIsOpen(false);
  };

  // ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å URL
  const copyToClipboard = async () => {
    const { url, text } = generateShareContent();
    const fullText = `${text}\n\n${url}`;
    
    try {
      await navigator.clipboard.writeText(fullText);
      showSuccess('‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß! üìã ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏ä‡∏£‡πå‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢');
    } catch (err) {
      // Fallback ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö browser ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö clipboard API
      const textArea = document.createElement('textarea');
      textArea.value = fullText;
      document.body.appendChild(textArea);
      textArea.focus();
      textArea.select();
      
      try {
        document.execCommand('copy');
        showSuccess('‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß! üìã ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏ä‡∏£‡πå‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢');
      } catch (fallbackErr) {
        showInfo('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏ô‡πÄ‡∏≠‡∏á: ' + fullText);
      }
      
      document.body.removeChild(textArea);
    }
    setIsOpen(false);
  };

  // ‡πÅ‡∏ä‡∏£‡πå‡∏ú‡πà‡∏≤‡∏ô Web Share API (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠)
  const shareNative = async () => {
    const { url, text } = generateShareContent();
    
    if (navigator.share) {
      try {
        await navigator.share({
          title: `‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏£‡πâ‡∏≤‡∏ô ${restaurant.name}`,
          text: text,
          url: url,
        });
        showSuccess('‡πÅ‡∏ä‡∏£‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß! üéâ');
      } catch (err) {
        if (err.name !== 'AbortError') {
          showInfo('‡∏Å‡∏≤‡∏£‡πÅ‡∏ä‡∏£‡πå‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å');
        }
      }
    } else {
      showInfo('‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏ä‡∏£‡πå‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏û‡∏•‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á');
    }
    setIsOpen(false);
  };

  return (
    <div className="social-share">
      <button 
        className="share-trigger-btn"
        onClick={() => setIsOpen(!isOpen)}
        title="‡πÅ‡∏ä‡∏£‡πå‡∏£‡∏µ‡∏ß‡∏¥‡∏ß"
      >
        üîó ‡πÅ‡∏ä‡∏£‡πå
      </button>

      {isOpen && (
        <>
          <div className="share-overlay" onClick={() => setIsOpen(false)} />
          <div className="share-popup">
            <div className="share-header">
              <h3>üì§ ‡πÅ‡∏ä‡∏£‡πå‡∏£‡∏µ‡∏ß‡∏¥‡∏ß</h3>
              <button 
                className="share-close"
                onClick={() => setIsOpen(false)}
              >
                √ó
              </button>
            </div>

            <div className="share-preview">
              <div className="share-restaurant">
                <img src={restaurant.image} alt={restaurant.name} />
                <div>
                  <h4>{restaurant.name}</h4>
                  <p>{restaurant.cuisine}</p>
                  {review && (
                    <div className="share-rating">
                      {'‚≠ê'.repeat(review.rating)} ({review.rating}/5)
                    </div>
                  )}
                </div>
              </div>
            </div>

            <div className="share-options">
              {/* Web Share API (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠) */}
              {navigator.share && (
                <button 
                  className="share-btn share-native"
                  onClick={shareNative}
                >
                  üì± ‡πÅ‡∏ä‡∏£‡πå
                </button>
              )}

              {/* Facebook */}
              <button 
                className="share-btn share-facebook"
                onClick={shareToFacebook}
              >
                üìò Facebook
              </button>

              {/* Twitter */}
              <button 
                className="share-btn share-twitter"
                onClick={shareToTwitter}
              >
                üê¶ Twitter
              </button>

              {/* LINE */}
              <button 
                className="share-btn share-line"
                onClick={shareToLine}
              >
                üíö LINE
              </button>

              {/* Copy Link */}
              <button 
                className="share-btn share-copy"
                onClick={copyToClipboard}
              >
                üìã ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏•‡∏¥‡∏á‡∏Å‡πå
              </button>
            </div>

            <div className="share-tip">
              üí° <strong>‡πÄ‡∏ó‡∏¥‡∏õ:</strong> ‡πÅ‡∏ä‡∏£‡πå‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô ‡πÜ ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏î‡∏µ ‡πÜ
            </div>
          </div>
        </>
      )}
    </div>
  );
};

export default SocialShare;