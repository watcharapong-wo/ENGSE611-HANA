import { useState } from 'react';
import { addReview } from '../services/api-static.js';
import { useAuth } from '../contexts/AuthContext';
import { useNotification } from '../contexts/NotificationContext';
import ImageUploader from './ImageUploader';

function ReviewForm({ restaurantId, onReviewSubmitted }) {
  const { user, isAuthenticated } = useAuth();
  const { showSuccess, showError, showWarning } = useNotification();
  const [formData, setFormData] = useState({
    userName: user?.name || '',
    rating: 5,
    comment: '',
    images: [] // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
  });
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: value
    }));
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
  const handleImagesChange = (images) => {
    setFormData(prev => ({
      ...prev,
      images
    }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    
    if (!isAuthenticated) {
      showWarning('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏£‡∏µ‡∏ß‡∏¥‡∏ß');
      return;
    }
    
    if (formData.userName.length < 2 || formData.userName.length > 50) {
      showError('‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß 2-50 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£');
      return;
    }
    
    if (formData.comment.length < 10 || formData.comment.length > 500) {
      showError('‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß 10-500 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£');
      return;
    }

    try {
      setLoading(true);
      setError('');
      
      const reviewData = {
        restaurantId,
        userName: formData.userName.trim(),
        rating: parseInt(formData.rating),
        comment: formData.comment.trim(),
        images: formData.images, // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
        userId: user?.id || null
      };

      await addReview(reviewData);
      
      // ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
      showSuccess(
        `‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏µ‡∏ß‡∏¥‡∏ß ${formData.rating} ‡∏î‡∏≤‡∏ß! ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡∏≠‡∏∑‡πà‡∏ô‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡πÑ‡∏î‡πâ‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô`,
        { duration: 5000 }
      );
      
      setFormData({
        userName: user?.name || '',
        rating: 5,
        comment: '',
        images: [] // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
      });
      
      if (onReviewSubmitted) {
        onReviewSubmitted();
      }
      
    } catch (err) {
      const errorMessage = err.message || '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏£‡∏µ‡∏ß‡∏¥‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á';
      setError(errorMessage);
      showError(errorMessage);
    } finally {
      setLoading(false);
    }
  };

  return (
    <form className="review-form" onSubmit={handleSubmit}>
      {error && <div className="error">{error}</div>}
      
      {!isAuthenticated && (
        <div className="auth-warning">
          <p>‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏£‡∏µ‡∏ß‡∏¥‡∏ß</p>
        </div>
      )}
      
      <div className="form-group">
        <label htmlFor="userName">‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß</label>
        <input
          type="text"
          id="userName"
          name="userName"
          value={formData.userName}
          onChange={handleInputChange}
          placeholder="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì"
          className="form-input"
          required
          disabled={loading || !isAuthenticated}
          readOnly={isAuthenticated} // ‡∏ñ‡πâ‡∏≤ login ‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏≤‡∏Å profile
        />
      </div>

      <div className="form-group">
        <label htmlFor="rating">‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô</label>
        <select
          id="rating"
          name="rating"
          value={formData.rating}
          onChange={handleInputChange}
          className="form-select"
          disabled={loading || !isAuthenticated}
        >
          <option value={1}>‚≠ê 1 ‡∏î‡∏≤‡∏ß</option>
          <option value={2}>‚≠ê‚≠ê 2 ‡∏î‡∏≤‡∏ß</option>
          <option value={3}>‚≠ê‚≠ê‚≠ê 3 ‡∏î‡∏≤‡∏ß</option>
          <option value={4}>‚≠ê‚≠ê‚≠ê‚≠ê 4 ‡∏î‡∏≤‡∏ß</option>
          <option value={5}>‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê 5 ‡∏î‡∏≤‡∏ß</option>
        </select>
      </div>

      <div className="form-group">
        <label htmlFor="comment">‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô</label>
        <textarea
          id="comment"
          name="comment"
          value={formData.comment}
          onChange={handleInputChange}
          placeholder="‡∏ö‡∏≠‡∏Å‡πÄ‡∏•‡πà‡∏≤‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏ó‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì..."
          className="form-textarea"
          rows="4"
          required
          disabled={loading || !isAuthenticated}
        />
      </div>

      {/* Image Uploader Section */}
      <div className="form-group">
        <label>üì∏ ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏£‡∏µ‡∏ß‡∏¥‡∏ß (‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö)</label>
        <ImageUploader 
          images={formData.images}
          onChange={handleImagesChange}
          disabled={loading || !isAuthenticated}
          maxImages={3}
        />
      </div>

      <button 
        type="submit" 
        className="submit-btn"
        disabled={loading || !isAuthenticated}
      >
        {loading ? '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á‡∏£‡∏µ‡∏ß‡∏¥‡∏ß...' : isAuthenticated ? '‡∏™‡πà‡∏á‡∏£‡∏µ‡∏ß‡∏¥‡∏ß' : '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö'}
      </button>
    </form>
  );
}

export default ReviewForm;